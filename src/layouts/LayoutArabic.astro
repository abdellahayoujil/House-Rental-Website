---
import "../styles/global.css";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

export interface Props {
  title?: string;
  description?: string;
}

const {
  title = "فيلا سيرينيتي - تأجير منزل فاخر",
  description = "استأجر منزلًا فاخرًا مع حمام سباحة لقضاء عطلتك",
} = Astro.props;

const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);
---

<!doctype html>
<html lang="ar" dir="rtl">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <title>{title}</title>
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;600;700&display=swap" rel="stylesheet">
    
    <!-- PhotoSwipe styles -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/photoswipe@5.4.3/dist/photoswipe.css">
  </head>
  <body class="rtl">
    <div class="page-container">
      <Header />
      <main>
        <slot />
      </main>
      <Footer />
    </div>

    <script>
      // Highlight active section on scroll
      document.addEventListener('DOMContentLoaded', () => {
        const sections = document.querySelectorAll('section[id]');
        const navLinks = document.querySelectorAll('.nav-link');
        
        const observerOptions = {
          rootMargin: '-100px 0px -70% 0px',
          threshold: 0
        };
        
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const id = entry.target.getAttribute('id');
              
              navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('href') === `#${id}`) {
                  link.classList.add('active');
                }
              });
            }
          });
        }, observerOptions);
        
        sections.forEach(section => {
          observer.observe(section);
        });
      });
    </script>
  </body>
</html>

<style>
  .page-container {
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }
  
  main {
    flex: 1;
  }
</style>